# H2 (refers to dto)
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
#quarkus.datasource.username=user
#quarkus.datasource.password=pass
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.log.sql=true

# jwt
smallrye.jwt.sign.key.location=privateKey.pem
mp.jwt.verify.publickey.location=publicKey.pem
# required
mp.jwt.verify.issuer=https://quarkus.io/jwt-case

# db (persistence/AccountResource.java)
quarkus.datasource.db-kind=postgresql
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.datasource.username=user
quarkus.datasource.password=pass

# flyway (persistence/PersonResource.java)
# No JDBC URL needed. No container to run. Quarkus Dev Services acts like the Oracle and are starting what you need, when you need it
#quarkus.datasource.db-kind=postgresql
#quarkus.hibernate-orm.database.generation=none
#quarkus.flyway.migrate-at-start=true
#quarkus.flyway.baseline-on-migrate=true

